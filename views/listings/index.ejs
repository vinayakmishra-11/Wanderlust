<% layout('layouts/boilerplate') %>

<style>
/* Airbnb-style Filter Bar */
.filter-container {
    background: #fff;
    padding: 16px 0;
    border-bottom: 1px solid #f7f7f7;
    margin-bottom: 24px;
    position: sticky;
    top: 80px;
    z-index: 10;
    box-shadow: 0 1px 2px rgba(0,0,0,0.08);
}

#filters {
    display: flex;
    align-items: center;
    gap: 32px;
    overflow-x: auto;
    padding: 0 24px;
    scrollbar-width: none;
    -ms-overflow-style: none;
}

#filters::-webkit-scrollbar {
    display: none;
}

.filter {
    display: flex;
    flex-direction: column;
    align-items: center;
    min-width: 56px;
    padding: 12px 8px;
    cursor: pointer;
    border-radius: 12px;
    transition: all 0.2s ease;
    opacity: 0.6;
    border: 1px solid transparent;
}

.filter:hover {
    opacity: 1;
    background-color: #f7f7f7;
}

.filter.active {
    opacity: 1;
    border-color: #222;
}

.filter i {
    font-size: 20px;
    margin-bottom: 8px;
    color: #717171;
}

.filter.active i {
    color: #222;
}

.filter p {
    font-size: 12px;
    font-weight: 500;
    margin: 0;
    color: #717171;
    text-align: center;
    white-space: nowrap;
}

.filter.active p {
    color: #222;
}

.tax-toggle {
    margin-left: auto;
    padding: 12px 16px;
    border: 1px solid #ddd;
    border-radius: 12px;
    background: #fff;
    display: flex;
    align-items: center;
    gap: 8px;
    min-width: 200px;
}

.tax-toggle label {
    font-size: 14px;
    font-weight: 500;
    margin: 0;
    color: #222;
}

/* Main Content */
.listings-container {
    max-width: 1760px;
    margin: 0 auto;
    padding: 0 24px;
}

.listings-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 24px;
    margin-top: 24px;
}

/* Airbnb-style Cards */
.listing-card {
    background: #fff;
    border-radius: 12px;
    overflow: hidden;
    transition: transform 0.1s ease;
    cursor: pointer;
}

.listing-card:hover {
    transform: scale(1.02);
}

.card-image-container {
    position: relative;
    width: 100%;
    padding-bottom: 66.67%; /* 3:2 aspect ratio */
    overflow: hidden;
    border-radius: 12px;
}

.card-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.heart-btn {
    position: absolute;
    top: 12px;
    right: 12px;
    background: rgba(255, 255, 255, 0.9);
    border: none;
    border-radius: 50%;
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease;
}

.heart-btn:hover {
    background: #fff;
    transform: scale(1.1);
}

.card-content {
    padding: 12px 0;
}

.card-location {
    font-size: 15px;
    font-weight: 600;
    color: #222;
    margin: 0 0 2px 0;
    line-height: 1.2;
}

.card-description {
    font-size: 15px;
    color: #717171;
    margin: 0 0 2px 0;
    line-height: 1.2;
}

.card-dates {
    font-size: 15px;
    color: #717171;
    margin: 0 0 4px 0;
    line-height: 1.2;
}

.card-price {
    font-size: 15px;
    color: #222;
    margin: 0;
    line-height: 1.2;
}

.price-amount {
    font-weight: 600;
}

.taxinfo {
    display: none;
    color: #717171;
    font-weight: 400;
}

.rating {
    display: flex;
    align-items: center;
    gap: 4px;
    margin-bottom: 8px;
}

.rating i {
    color: #ff385c;
    font-size: 12px;
}

.rating-text {
    font-size: 14px;
    font-weight: 500;
    color: #222;
}

/* Responsive Design */
@media (max-width: 1128px) {
    .listings-grid {
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 20px;
    }
    
    .listings-container {
        padding: 0 20px;
    }
}

@media (max-width: 768px) {
    .listings-grid {
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 16px;
    }
    
    .listings-container {
        padding: 0 16px;
    }
    
    #filters {
        padding: 0 16px;
        gap: 24px;
    }
    
    .tax-toggle {
        display: none;
    }
}

@media (max-width: 480px) {
    .listings-grid {
        grid-template-columns: 1fr;
        gap: 24px;
    }
    
    .filter p {
        font-size: 11px;
    }
    
    .filter i {
        font-size: 18px;
    }
}
</style>

<!-- Filter Bar -->
<div class="filter-container">
    <div id="filters">
        <div class="filter" data-filter="trending">
            <div><i class="fa-solid fa-fire"></i></div>
            <p>Trending</p>
        </div>
        <div class="filter" data-filter="rooms">
            <div><i class="fa-solid fa-bed"></i></div>
            <p>Rooms</p>
        </div>
        <div class="filter" data-filter="iconic">
            <div><i class="fa-solid fa-mountain-city"></i></div>
            <p>Iconic cities</p>
        </div>
        <div class="filter" data-filter="mountains">
            <div><i class="fa-solid fa-mountain"></i></div>
            <p>Mountains</p>
        </div>
        <div class="filter" data-filter="castles">
            <div><i class="fa-solid fa-chess-rook"></i></div>
            <p>Castles</p>
        </div>
        <div class="filter" data-filter="pools">
            <div><i class="fa-solid fa-person-swimming"></i></div>
            <p>Amazing pools</p>
        </div>
        <div class="filter" data-filter="camping">
            <div><i class="fa-solid fa-campground"></i></div>
            <p>Camping</p>
        </div>
        <div class="filter" data-filter="farms">
            <div><i class="fa-solid fa-cow"></i></div>
            <p>Farms</p>
        </div>
        <div class="filter" data-filter="boats">
            <div><i class="fa-solid fa-ship"></i></div>
            <p>Boats</p>
        </div>
        <div class="filter" data-filter="domes">
            <div><i class="fa-solid fa-igloo"></i></div>
            <p>Domes</p>
        </div>
        <div class="filter" data-filter="beachfront">
            <div><i class="fa-solid fa-umbrella-beach"></i></div>
            <p>Beachfront</p>
        </div>
        <div class="filter" data-filter="design">
            <div><i class="fa-solid fa-pen-ruler"></i></div>
            <p>Design</p>
        </div>
        
        <div class="tax-toggle">
            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" role="switch" id="switchCheckDefault">
                <label class="form-check-label" for="switchCheckDefault">Display total after taxes</label>
            </div>
        </div>
    </div>
</div>

<!-- Listings Grid -->
<div class="listings-container">
    <div class="listings-grid">
        <% alllistng.forEach((listing) => { %>
            <div class="listing-card">
                <a href="/listings/<%= listing._id %>" class="text-decoration-none text-dark">
                    <div class="card-image-container">
                        <img src="<%= listing.image.url %>" class="card-image" alt="<%= listing.title %>">
                        <button class="heart-btn" onclick="event.preventDefault(); toggleHeart(this)">
                            <i class="fa-regular fa-heart"></i>
                        </button>
                    </div>
                    <div class="card-content">
                        <div class="rating">
                            <i class="fa-solid fa-star"></i>
                            <span class="rating-text">4.8</span>
                        </div>
                        <div class="card-location"><%= listing.location %>, <%= listing.country %></div>
                        <div class="card-description"><%= listing.title %></div>
                        <div class="card-dates">5 nights · Dec 15-20</div>
                        <div class="card-price">
                            <span class="price-amount">₹<%= listing.price.toLocaleString("en-IN") %></span> night
                            <span class="taxinfo"> · +18% GST</span>
                        </div>
                    </div>
                </a>
            </div>
        <% }) %>
    </div>
</div>

<script>
// Tax toggle functionality
const taxSwitch = document.getElementById("switchCheckDefault");
taxSwitch.addEventListener("change", () => {
    const taxInfoElements = document.getElementsByClassName("taxinfo");
    for (let info of taxInfoElements) {
        info.style.display = taxSwitch.checked ? "inline" : "none";
    }
});

// Filter functionality
const filters = document.querySelectorAll('.filter');
filters.forEach(filter => {
    filter.addEventListener('click', () => {
        // Remove active class from all filters
        filters.forEach(f => f.classList.remove('active'));
        // Add active class to clicked filter
        filter.classList.add('active');
        
        // Here you can add actual filtering logic
        console.log('Filter selected:', filter.dataset.filter);
    });
});

// Heart toggle functionality
function toggleHeart(btn) {
    const icon = btn.querySelector('i');
    if (icon.classList.contains('fa-regular')) {
        icon.classList.remove('fa-regular');
        icon.classList.add('fa-solid');
        icon.style.color = '#ff385c';
    } else {
        icon.classList.remove('fa-solid');
        icon.classList.add('fa-regular');
        icon.style.color = '';
    }
}

// Smooth scrolling for filter bar
const filtersContainer = document.getElementById('filters');
let isDown = false;
let startX;
let scrollLeft;

filtersContainer.addEventListener('mousedown', (e) => {
    isDown = true;
    startX = e.pageX - filtersContainer.offsetLeft;
    scrollLeft = filtersContainer.scrollLeft;
});

filtersContainer.addEventListener('mouseleave', () => {
    isDown = false;
});

filtersContainer.addEventListener('mouseup', () => {
    isDown = false;
});

filtersContainer.addEventListener('mousemove', (e) => {
    if (!isDown) return;
    e.preventDefault();
    const x = e.pageX - filtersContainer.offsetLeft;
    const walk = (x - startX) * 2;
    filtersContainer.scrollLeft = scrollLeft - walk;
});
</script>

